// –ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏

function updateYandexMapsData() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var calculationSheet = ss.getSheetByName('–†–∞—Å—á–µ—Ç—ã');
  var selectedMonth = String(getValue(calculationSheet, CellselectedMonth)).trim();
  var selectedYear = String(getValue(calculationSheet, CellSelectedYear)).trim();
  var monthUpperCase = convertMonthToUpperCase(selectedMonth);
  var sheetName = monthUpperCase + ' ' + selectedYear.toString().slice(-2);

  Logger.log('üìå –í—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü: ' + selectedMonth);
  Logger.log('üìå –í—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ–¥: ' + selectedYear);
  Logger.log('üìå –õ–∏—Å—Ç –º–µ—Å—è—Ü–∞: ' + sheetName);

  var guestSheet = ss.getSheetByName('–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏');
  if (!guestSheet) {
    Logger.log('‚ùå –õ–∏—Å—Ç "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    return;
  }

  var targetAddresses = [
    '–ö–£–ô–ë–´–®–ï–í–ê 109–ê –ñ–ö –ú–ï–õ–ê–ù–ñ',
    '–†–ï–í–û–õ–Æ–¶–ò–ò 52 –ñ–ö –ü–†–ï–ú–¨–ï–†',
    '–û–°–¢–†–û–í–°–ö–û–ì–û 52 –ñ–ö –ü–†–ï–ú–¨–ï–†',
    '–†–ï–í–û–õ–Æ–¶–ò–ò 52–ë',
    '–†–ï–í–û–õ–Æ–¶–ò–ò 52–í',
    '–§–†–ï–ó–ï–†–û–í–©–ò–ö–û–í',
    '–†–ï–í–û–õ–Æ–¶–ò–Ø 48–ë',
    '–ü–ê–†–ö–û–í–´–ô'
  ];

  var totalPlanLeads = 0;
  var totalFactLeads = 0;
  var totalPlanDeals = 0;
  var totalFactDeals = 0;
  var totalPlanRevenue = 0;
  var totalFactRevenue = 0;
  var totalPlanCleanLeads = 0;
  var totalFactCleanLeads = 0;

  var values = guestSheet.getDataRange().getValues();
  var foundMonth = false;
  var startRow = 0;
  var endRow = values.length;

  // üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –Ω–∞—á–∞–ª–æ –±–ª–æ–∫–∞ –¥–ª—è –Ω—É–∂–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞
  for (var i = 0; i < values.length - 1; i++) {
    if (String(values[i][0]).trim().toUpperCase() === '–Ø–ù–î–ï–ö–° –ö–ê–†–¢–´' &&
        String(values[i + 1][0]).trim().toUpperCase() === selectedMonth.toUpperCase()) {
      Logger.log("‚úÖ –ù–∞–π–¥–µ–Ω –º–µ—Å—è—Ü " + selectedMonth + " –ø–æ—Å–ª–µ '–Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã' –Ω–∞ —Å—Ç—Ä–æ–∫–µ " + (i + 2));
      startRow = i + 2;
      foundMonth = true;
      break;
    }
  }

  if (!foundMonth) {
    Logger.log('‚ùå –ú–µ—Å—è—Ü ' + selectedMonth + ' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–ª–æ–∫–∞—Ö "–Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã"!');
    return;
  }

  // üîπ –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–Ω–µ—Ü –±–ª–æ–∫–∞ (—Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü –∏–ª–∏ –∫–æ–Ω–µ—Ü –ª–∏—Å—Ç–∞)
  for (var j = startRow; j < values.length; j++) {
    var cellValue = String(values[j][0]).trim().toUpperCase();
    if (cellValue.match(/–Ø–ù–í–ê–†–¨|–§–ï–í–†–ê–õ–¨|–ú–ê–†–¢|–ê–ü–†–ï–õ–¨|–ú–ê–ô|–ò–Æ–ù–¨|–ò–Æ–õ–¨|–ê–í–ì–£–°–¢|–°–ï–ù–¢–Ø–ë–†–¨|–û–ö–¢–Ø–ë–†–¨|–ù–û–Ø–ë–†–¨|–î–ï–ö–ê–ë–†–¨/)) {
      Logger.log("üîπ –ù–∞–π–¥–µ–Ω —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü (" + cellValue + ") –Ω–∞ —Å—Ç—Ä–æ–∫–µ " + (j + 1) + ". –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–æ–∏—Å–∫.");
      endRow = j;
      break;
    }
  }

  Logger.log("üìå –ü–æ–∏—Å–∫ –∞–¥—Ä–µ—Å–æ–≤ —Å " + startRow + " –ø–æ " + (endRow - 1) + " —Å—Ç—Ä–æ–∫–∏.");

  // üîπ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–º–∞ –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞
  for (var i = 0; i < targetAddresses.length; i++) {
    var address = targetAddresses[i];
    var addressFound = false;

    for (var row = startRow; row < endRow; row++) {
      if (String(values[row][0]).trim().toUpperCase() === address) {
        Logger.log("‚úÖ –ù–∞–π–¥–µ–Ω –∞–¥—Ä–µ—Å: " + address + " –Ω–∞ —Å—Ç—Ä–æ–∫–µ " + (row + 1));
        addressFound = true;

        var leadsCell = row + 2; // –ó–≤–æ–Ω–æ–∫/–ø–µ—Ä–µ–ø–∏—Å–∫–∞
        var dealCell = row + 6; // –°–¥–µ–ª–∫–∞
        var revenueCell = row + 7; // –í—ã—Ä—É—á–∫–∞
        var cleanLeadsCell = row + 4; // –õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ

        Logger.log("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–∫–∏:");
        Logger.log("   - –õ–∏–¥—ã: —Å—Ç—Ä–æ–∫–∞ " + (leadsCell + 1));
        Logger.log("   - –°–¥–µ–ª–∫–∞: —Å—Ç—Ä–æ–∫–∞ " + (dealCell + 1));
        Logger.log("   - –í—ã—Ä—É—á–∫–∞: —Å—Ç—Ä–æ–∫–∞ " + (revenueCell + 1));
        Logger.log("   - –õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ: —Å—Ç—Ä–æ–∫–∞ " + (cleanLeadsCell + 1));

        var planLeads = parseFloat(values[leadsCell][1]) || 0;
        var factLeads = parseFloat(values[leadsCell][2]) || 0;
        var planDeals = parseFloat(values[dealCell][1]) || 0;
        var factDeals = parseFloat(values[dealCell][2]) || 0;
        var planRevenue = parseFloat(values[revenueCell][1]) || 0;
        var factRevenue = parseFloat(values[revenueCell][2]) || 0;
        var planCleanLeads = parseFloat(values[cleanLeadsCell][1]) || 0;
        var factCleanLeads = parseFloat(values[cleanLeadsCell][2]) || 0;

        // üîπ –£–º–Ω–æ–∂–∞–µ–º –≤—ã—Ä—É—á–∫—É –Ω–∞ 1000, –µ—Å–ª–∏ –æ–Ω–∞ —É–∫–∞–∑–∞–Ω–∞ –≤ —Ç—ã—Å—è—á–∞—Ö
        if (planRevenue > 0 && planRevenue < 1000) {
          planRevenue *= 1000;
        }
        if (factRevenue > 0 && factRevenue < 1000) {
          factRevenue *= 1000;
        }

        Logger.log("   ‚úÖ –õ–∏–¥—ã: –ü–ª–∞–Ω=" + planLeads + ", –§–∞–∫—Ç=" + factLeads);
        Logger.log("   ‚úÖ –°–¥–µ–ª–∫–∏: –ü–ª–∞–Ω=" + planDeals + ", –§–∞–∫—Ç=" + factDeals);
        Logger.log("   ‚úÖ –í—ã—Ä—É—á–∫–∞: –ü–ª–∞–Ω=" + planRevenue + ", –§–∞–∫—Ç=" + factRevenue);
        Logger.log("   ‚úÖ –õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ: –ü–ª–∞–Ω=" + planCleanLeads + ", –§–∞–∫—Ç=" + factCleanLeads);

        totalPlanLeads += planLeads;
        totalFactLeads += factLeads;
        totalPlanDeals += planDeals;
        totalFactDeals += factDeals;
        totalPlanRevenue += planRevenue;
        totalFactRevenue += factRevenue;
        totalPlanCleanLeads += planCleanLeads;
        totalFactCleanLeads += factCleanLeads;
        break;
      }
    }

    if (!addressFound) {
      Logger.log("‚ö†Ô∏è –ê–¥—Ä–µ—Å " + address + " –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö –∑–∞ " + selectedMonth + ". –ü—Ä–æ–ø—É—Å–∫–∞–µ–º.");
    }
  }

  Logger.log("üìä –ò—Ç–æ–≥–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ:");
  Logger.log("üîπ –õ–∏–¥—ã (–ü–ª–∞–Ω): " + totalPlanLeads);
  Logger.log("üîπ –õ–∏–¥—ã (–§–∞–∫—Ç): " + totalFactLeads);
  Logger.log("üîπ –°–¥–µ–ª–∫–∏ (–ü–ª–∞–Ω): " + totalPlanDeals);
  Logger.log("üîπ –°–¥–µ–ª–∫–∏ (–§–∞–∫—Ç): " + totalFactDeals);
  Logger.log("üîπ –í—ã—Ä—É—á–∫–∞ (–ü–ª–∞–Ω): " + totalPlanRevenue);
  Logger.log("üîπ –í—ã—Ä—É—á–∫–∞ (–§–∞–∫—Ç): " + totalFactRevenue);
  Logger.log("üîπ –õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ (–ü–ª–∞–Ω): " + totalPlanCleanLeads);
  Logger.log("üîπ –õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ (–§–∞–∫—Ç): " + totalFactCleanLeads);

  // üîπ –ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ –ª–∏—Å—Ç –º–µ—Å—è—Ü–∞
  var monthSheet = ss.getSheetByName(sheetName);
  if (!monthSheet) {
    Logger.log('‚ùå –õ–∏—Å—Ç –º–µ—Å—è—Ü–∞ "' + sheetName + '" –Ω–µ –Ω–∞–π–¥–µ–Ω!');
    return;
  }

  var yandexMapsTargetCell = findCellByValueInColumn(monthSheet, '–Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã', 'E');
  if (!yandexMapsTargetCell) {
    Logger.log('‚ùå "–Ø–Ω–¥–µ–∫—Å –∫–∞—Ä—Ç—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –º–µ—Å—è—á–Ω–æ–º –ª–∏—Å—Ç–µ!');
    return;
  }

  var targetRow = yandexMapsTargetCell.getRow();
  var leadsTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã', 'E', targetRow);
  var dealsTargetCell = findCellByValueInColumn(monthSheet, '–°–¥–µ–ª–∫–∏', 'E', targetRow);
  var revenueTargetCell = findCellByValueInColumn(monthSheet, '–í—ã—Ä—É—á–∫–∞', 'E', targetRow);
  var cleanLeadsTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'E', targetRow);

  if (leadsTargetCell && dealsTargetCell && revenueTargetCell && cleanLeadsTargetCell) {
    monthSheet.getRange(leadsTargetCell.getRow(), 6).setValue(totalPlanLeads);
    monthSheet.getRange(leadsTargetCell.getRow(), 7).setValue(totalFactLeads);
    monthSheet.getRange(dealsTargetCell.getRow(), 6).setValue(totalPlanDeals);
    monthSheet.getRange(dealsTargetCell.getRow(), 7).setValue(totalFactDeals);
    monthSheet.getRange(revenueTargetCell.getRow(), 6).setValue(totalPlanRevenue);
    monthSheet.getRange(revenueTargetCell.getRow(), 7).setValue(totalFactRevenue);
    monthSheet.getRange(cleanLeadsTargetCell.getRow(), 6).setValue(totalPlanCleanLeads);
    monthSheet.getRange(cleanLeadsTargetCell.getRow(), 7).setValue(totalFactCleanLeads);
    Logger.log('‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –≤ ' + sheetName);
  }
}


function updateVKGroupData() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var calculationSheet = ss.getSheetByName('–†–∞—Å—á–µ—Ç—ã');

  Logger.log('--- –ù–ê–ß–ê–õ–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø –î–ê–ù–ù–´–• –í–ö –ì–†–£–ü–ü–ê ---');

  if (!calculationSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "–†–∞—Å—á–µ—Ç—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞
  var selectedMonth = getValue(calculationSheet, CellselectedMonth);
  var selectedYear = getValue(calculationSheet, CellSelectedYear);
  var monthUpperCase = convertMonthToUpperCase(selectedMonth, CellselectedMonth);
  var sheetName = monthUpperCase + ' ' + selectedYear.toString().slice(-2);

  Logger.log('–í—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü: ' + selectedMonth);
  Logger.log('–í—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ–¥: ' + selectedYear);
  Logger.log('–§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞: ' + sheetName);

  var guestSheet = ss.getSheetByName('–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏');
  if (!guestSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É "–í–ö –≥—Ä—É–ø–ø–∞ <–ú–µ—Å—è—Ü>"
  var searchPattern = '–í–ö –≥—Ä—É–ø–ø–∞ ' + selectedMonth;
  var vkGroupCell = findCellByValue(guestSheet, searchPattern);
  if (!vkGroupCell) {
    Logger.log('–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "' + searchPattern + '" –≤ "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏".');
    return;
  }
  var row = vkGroupCell.getRow();
  Logger.log('–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞: "' + searchPattern + '" –Ω–∞ —Å—Ç—Ä–æ–∫–µ ' + row);

  // –ù–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
  var leadsCell = findCellByValueInColumn(guestSheet, '–õ–∏–¥—ã', 'A', row);
  var dealsCell = findCellByValueInColumn(guestSheet, '–°–¥–µ–ª–∫–∏', 'A', row);
  var conversionCell = findCellByValueInColumn(guestSheet, 'CV2(–∫–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –±—Ä–æ–Ω—å)', 'A', row);
  var revenueCell = findCellByValueInColumn(guestSheet, '–í—ã—Ä—É—á–∫–∞', 'A', row);
  var leadCleanCell = findCellByValueInColumn(guestSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'A', row);

  Logger.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫:');
  Logger.log('–õ–∏–¥—ã: ' + (leadsCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ: ' + (leadCleanCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–°–¥–µ–ª–∫–∏: ' + (dealsCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–ö–æ–Ω–≤–µ—Ä—Å–∏—è: ' + (conversionCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–í—ã—Ä—É—á–∫–∞: ' + (revenueCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));

  var leadsPlanValue = leadsCell ? guestSheet.getRange(leadsCell.getRow(), 2).getValue() || 0 : 0;
  var leadsFactValue = leadsCell ? guestSheet.getRange(leadsCell.getRow(), 3).getValue() || 0 : 0;
  var leadCleanPlan = leadCleanCell ? guestSheet.getRange(leadCleanCell.getRow(), 2).getValue() || 0 : 0;
  var leadCleanFact = leadCleanCell ? guestSheet.getRange(leadCleanCell.getRow(), 3).getValue() || 0 : 0;

  var dealsPlanValue = dealsCell ? guestSheet.getRange(dealsCell.getRow(), 2).getValue() || 0 : 0;
  var dealsFactValue = dealsCell ? guestSheet.getRange(dealsCell.getRow(), 3).getValue() || 0 : 0;

  var conversionPlanValue = conversionCell ? guestSheet.getRange(conversionCell.getRow(), 2).getValue() || 0 : 0;
  var conversionFactValue = conversionCell ? guestSheet.getRange(conversionCell.getRow(), 3).getValue() || 0 : 0;

  var revenuePlanValue = revenueCell ? guestSheet.getRange(revenueCell.getRow(), 2).getValue() || 0 : 0;
  var revenueFactValue = revenueCell ? guestSheet.getRange(revenueCell.getRow(), 3).getValue() || 0 : 0;

  // –õ–∏—Å—Ç "–Ø–ù–í–ê–†–¨ 25"
  var monthSheet = ss.getSheetByName(sheetName);
  if (!monthSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "' + sheetName + '" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }
  Logger.log('–õ–∏—Å—Ç –º–µ—Å—è—Ü–∞ "' + sheetName + '" –Ω–∞–π–¥–µ–Ω.');

  // –ù–∞–π—Ç–∏ "–í–ö –≥—Ä—É–ø–ø–∞" –≤ —Å—Ç–æ–ª–±—Ü–µ E
  var vkGroupTargetCell = findCellByValueInColumn(monthSheet, '–í–ö –≥—Ä—É–ø–ø–∞', 'E');
  if (!vkGroupTargetCell) {
    Logger.log('–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "–í–ö –≥—Ä—É–ø–ø–∞" –≤ "' + sheetName + '".');
    return;
  }
  var targetRow = vkGroupTargetCell.getRow();
  Logger.log('–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "–í–ö –≥—Ä—É–ø–ø–∞" –Ω–∞ —Å—Ç—Ä–æ–∫–µ ' + targetRow);

  // –ó–∞–ø–∏—Å—å "–õ–∏–¥—ã"
  var leadsTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã', 'E', targetRow);
  if (leadsTargetCell) {
    monthSheet.getRange(leadsTargetCell.getRow(), 6).setValue(leadsPlanValue);
    monthSheet.getRange(leadsTargetCell.getRow(), 7).setValue(leadsFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–õ–∏–¥—ã": –ü–ª–∞–Ω = ' + leadsPlanValue + ', –§–∞–∫—Ç = ' + leadsFactValue);
  }

  // –ó–∞–ø–∏—Å—å "–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ"
  var cleanLeadsTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'E', targetRow);
  if (cleanLeadsTargetCell) {
    monthSheet.getRange(cleanLeadsTargetCell.getRow(), 6).setValue(leadCleanPlan);
    monthSheet.getRange(cleanLeadsTargetCell.getRow(), 7).setValue(leadCleanFact);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ": –ü–ª–∞–Ω = ' + leadCleanPlan + ', –§–∞–∫—Ç = ' + leadCleanFact);
  }

  // –ó–∞–ø–∏—Å—å "–°–¥–µ–ª–∫–∏"
  var dealsTargetCell = findCellByValueInColumn(monthSheet, '–°–¥–µ–ª–∫–∏', 'E', targetRow);
  if (dealsTargetCell) {
    monthSheet.getRange(dealsTargetCell.getRow(), 6).setValue(dealsPlanValue);
    monthSheet.getRange(dealsTargetCell.getRow(), 7).setValue(dealsFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–°–¥–µ–ª–∫–∏": –ü–ª–∞–Ω = ' + dealsPlanValue + ', –§–∞–∫—Ç = ' + dealsFactValue);
  }

  // –ó–∞–ø–∏—Å—å "–ö–æ–Ω–≤–µ—Ä—Å–∏—è"
  var conversionTargetCell = findCellByValueInColumn(monthSheet, 'CV2(–∫–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –±—Ä–æ–Ω—å)', 'E', targetRow);
  if (conversionTargetCell) {
    monthSheet.getRange(conversionTargetCell.getRow(), 6).setValue(conversionPlanValue);
    monthSheet.getRange(conversionTargetCell.getRow(), 7).setValue(conversionFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–ö–æ–Ω–≤–µ—Ä—Å–∏—è": –ü–ª–∞–Ω = ' + conversionPlanValue + ', –§–∞–∫—Ç = ' + conversionFactValue);
  }

  // –ó–∞–ø–∏—Å—å "–í—ã—Ä—É—á–∫–∞"
  var revenueTargetCell = findCellByValueInColumn(monthSheet, '–í—ã—Ä—É—á–∫–∞', 'E', targetRow);
  if (revenueTargetCell) {
    monthSheet.getRange(revenueTargetCell.getRow(), 6).setValue(revenuePlanValue);
    monthSheet.getRange(revenueTargetCell.getRow(), 7).setValue(revenueFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–í—ã—Ä—É—á–∫–∞": –ü–ª–∞–Ω = ' + revenuePlanValue + ', –§–∞–∫—Ç = ' + revenueFactValue);
  }

  Logger.log('--- –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ---');
}


function updateTelegramChannelData() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var calculationSheet = ss.getSheetByName('–†–∞—Å—á–µ—Ç—ã');

  Logger.log('--- –ù–ê–ß–ê–õ–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø –î–ê–ù–ù–´–• TELEGRAM –ö–ê–ù–ê–õ ---');

  if (!calculationSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "–†–∞—Å—á–µ—Ç—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞
  var selectedMonth = getValue(calculationSheet, CellselectedMonth);
  var selectedYear = getValue(calculationSheet, CellSelectedYear);
  var monthUpperCase = convertMonthToUpperCase(selectedMonth, CellselectedMonth);
  var sheetName = monthUpperCase + ' ' + selectedYear.toString().slice(-2);

  Logger.log('–í—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü: ' + selectedMonth);
  Logger.log('–í—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ–¥: ' + selectedYear);
  Logger.log('–§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞: ' + sheetName);

  var guestSheet = ss.getSheetByName('–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏');
  if (!guestSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É "–¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª <–ú–µ—Å—è—Ü>"
  var searchPattern = '–¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª ' + selectedMonth;
  var telegramChannelCell = findCellByValue(guestSheet, searchPattern);
  if (!telegramChannelCell) {
    Logger.log('–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "' + searchPattern + '" –≤ "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏".');
    return;
  }
  var row = telegramChannelCell.getRow();
  Logger.log('–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞: "' + searchPattern + '" –Ω–∞ —Å—Ç—Ä–æ–∫–µ ' + row);

  // –ù–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
  var leadsCell = findCellByValueInColumn(guestSheet, '–õ–∏–¥—ã', 'A', row);
  var dealsCell = findCellByValueInColumn(guestSheet, '–°–¥–µ–ª–∫–∏', 'A', row);
  var conversionCell = findCellByValueInColumn(guestSheet, 'CV2(–∫–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –±—Ä–æ–Ω—å)', 'A', row);
  var revenueCell = findCellByValueInColumn(guestSheet, '–í—ã—Ä—É—á–∫–∞', 'A', row);
  var leadCleanCell = findCellByValueInColumn(guestSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'A', row);

  Logger.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫:');
  Logger.log('–õ–∏–¥—ã: ' + (leadsCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ: ' + (leadCleanCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–°–¥–µ–ª–∫–∏: ' + (dealsCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–ö–æ–Ω–≤–µ—Ä—Å–∏—è: ' + (conversionCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–í—ã—Ä—É—á–∫–∞: ' + (revenueCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));

  var leadsPlanValue = leadsCell ? guestSheet.getRange(leadsCell.getRow(), 2).getValue() || 0 : 0;
  var leadsFactValue = leadsCell ? guestSheet.getRange(leadsCell.getRow(), 3).getValue() || 0 : 0;
  var leadCleanPlan = leadCleanCell ? guestSheet.getRange(leadCleanCell.getRow(), 2).getValue() || 0 : 0;
  var leadCleanFact = leadCleanCell ? guestSheet.getRange(leadCleanCell.getRow(), 3).getValue() || 0 : 0;

  var dealsPlanValue = dealsCell ? guestSheet.getRange(dealsCell.getRow(), 2).getValue() || 0 : 0;
  var dealsFactValue = dealsCell ? guestSheet.getRange(dealsCell.getRow(), 3).getValue() || 0 : 0;

  var conversionPlanValue = conversionCell ? guestSheet.getRange(conversionCell.getRow(), 2).getValue() || 0 : 0;
  var conversionFactValue = conversionCell ? guestSheet.getRange(conversionCell.getRow(), 3).getValue() || 0 : 0;

  var revenuePlanValue = revenueCell ? guestSheet.getRange(revenueCell.getRow(), 2).getValue() || 0 : 0;
  var revenueFactValue = revenueCell ? guestSheet.getRange(revenueCell.getRow(), 3).getValue() || 0 : 0;

  // –õ–∏—Å—Ç "–Ø–ù–í–ê–†–¨ 25"
  var monthSheet = ss.getSheetByName(sheetName);
  if (!monthSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "' + sheetName + '" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }
  Logger.log('–õ–∏—Å—Ç –º–µ—Å—è—Ü–∞ "' + sheetName + '" –Ω–∞–π–¥–µ–Ω.');

  // –ù–∞–π—Ç–∏ "–¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª" –≤ —Å—Ç–æ–ª–±—Ü–µ E
  var telegramChannelTargetCell = findCellByValueInColumn(monthSheet, '–¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª', 'E');
  if (!telegramChannelTargetCell) {
    Logger.log('–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "–¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª" –≤ "' + sheetName + '".');
    return;
  }
  var targetRow = telegramChannelTargetCell.getRow();
  Logger.log('–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "–¢–µ–ª–µ–≥—Ä–∞–º–º –∫–∞–Ω–∞–ª" –Ω–∞ —Å—Ç—Ä–æ–∫–µ ' + targetRow);

  // –ó–∞–ø–∏—Å—å "–õ–∏–¥—ã"
  var leadsTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã', 'E', targetRow);
  if (leadsTargetCell) {
    monthSheet.getRange(leadsTargetCell.getRow(), 6).setValue(leadsPlanValue);
    monthSheet.getRange(leadsTargetCell.getRow(), 7).setValue(leadsFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–õ–∏–¥—ã": –ü–ª–∞–Ω = ' + leadsPlanValue + ', –§–∞–∫—Ç = ' + leadsFactValue);
  }

  // –ó–∞–ø–∏—Å—å "–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ"
  var cleanLeadsTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'E', targetRow);
  if (cleanLeadsTargetCell) {
    monthSheet.getRange(cleanLeadsTargetCell.getRow(), 6).setValue(leadCleanPlan);
    monthSheet.getRange(cleanLeadsTargetCell.getRow(), 7).setValue(leadCleanFact);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ": –ü–ª–∞–Ω = ' + leadCleanPlan + ', –§–∞–∫—Ç = ' + leadCleanFact);
  }

  // –ó–∞–ø–∏—Å—å "–°–¥–µ–ª–∫–∏"
  var dealsTargetCell = findCellByValueInColumn(monthSheet, '–°–¥–µ–ª–∫–∏', 'E', targetRow);
  if (dealsTargetCell) {
    monthSheet.getRange(dealsTargetCell.getRow(), 6).setValue(dealsPlanValue);
    monthSheet.getRange(dealsTargetCell.getRow(), 7).setValue(dealsFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–°–¥–µ–ª–∫–∏": –ü–ª–∞–Ω = ' + dealsPlanValue + ', –§–∞–∫—Ç = ' + dealsFactValue);
  }

  // –ó–∞–ø–∏—Å—å "–ö–æ–Ω–≤–µ—Ä—Å–∏—è"
  var conversionTargetCell = findCellByValueInColumn(monthSheet, 'CV2(–∫–æ–Ω–≤–µ—Ä—Å–∏—è –≤ –±—Ä–æ–Ω—å)', 'E', targetRow);
  if (conversionTargetCell) {
    monthSheet.getRange(conversionTargetCell.getRow(), 6).setValue(conversionPlanValue);
    monthSheet.getRange(conversionTargetCell.getRow(), 7).setValue(conversionFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–ö–æ–Ω–≤–µ—Ä—Å–∏—è": –ü–ª–∞–Ω = ' + conversionPlanValue + ', –§–∞–∫—Ç = ' + conversionFactValue);
  }

  // –ó–∞–ø–∏—Å—å "–í—ã—Ä—É—á–∫–∞"
  var revenueTargetCell = findCellByValueInColumn(monthSheet, '–í—ã—Ä—É—á–∫–∞', 'E', targetRow);
  if (revenueTargetCell) {
    monthSheet.getRange(revenueTargetCell.getRow(), 6).setValue(revenuePlanValue);
    monthSheet.getRange(revenueTargetCell.getRow(), 7).setValue(revenueFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–í—ã—Ä—É—á–∫–∞": –ü–ª–∞–Ω = ' + revenuePlanValue + ', –§–∞–∫—Ç = ' + revenueFactValue);
  }

  Logger.log('--- –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ---');
}

function updateRegularGuestsData() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var calculationSheet = ss.getSheetByName('–†–∞—Å—á–µ—Ç—ã');
  var selectedMonth = getValue(calculationSheet, CellselectedMonth);
  var selectedYear = getValue(calculationSheet, CellSelectedYear);
  var monthUpperCase = convertMonthToUpperCase(selectedMonth, CellselectedMonth);
  var sheetName = monthUpperCase + ' ' + selectedYear.toString().slice(-2);
  
  Logger.log('üìå Selected month: ' + selectedMonth);
  Logger.log('üìå Selected year: ' + selectedYear);
  Logger.log('üìå Sheet name: ' + sheetName);

  var guestSheet = ss.getSheetByName('–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏');
  if (!guestSheet) {
    Logger.log('‚ùå Sheet "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏" not found!');
    return;
  }

  var searchPattern = '–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –≥–æ—Å—Ç–∏ ' + selectedMonth;
  var regularGuestsCell = findCellByValue(guestSheet, searchPattern);

  if (!regularGuestsCell) {
    Logger.log('‚ùå Pattern "' + searchPattern + '" not found in guest sheet');
    return;
  }

  Logger.log('‚úÖ Found cell with pattern: ' + searchPattern);
  var row = regularGuestsCell.getRow();

  // –ü–æ–∏—Å–∫ —è—á–µ–µ–∫ —Å –Ω—É–∂–Ω—ã–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
  var guestsCountCell = findCellByValueInColumn(guestSheet, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π (—Å–¥–µ–ª–∫–∞)', 'A', row);
  var revenueCell = findCellByValueInColumn(guestSheet, '–í—ã—Ä—É—á–∫–∞', 'A', row);
  var percentageCell = findCellByValueInColumn(guestSheet, '–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –≥–æ—Å—Ç–µ–π', 'A', row);
  var leadCell = findCellByValueInColumn(guestSheet, '–õ–∏–¥—ã', 'A', row);
  var leadCleanCell = findCellByValueInColumn(guestSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'A', row);

  Logger.log('üîç Checking found cells:');
  if (!guestsCountCell) Logger.log('‚ùå "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Å—Ç–µ–π" not found in guest sheet');
  if (!revenueCell) Logger.log('‚ùå "–í—ã—Ä—É—á–∫–∞" not found in guest sheet');
  if (!percentageCell) Logger.log('‚ùå "–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –≥–æ—Å—Ç–µ–π" not found in guest sheet');
  if (!leadCell) Logger.log('‚ùå "–õ–∏–¥—ã" not found in guest sheet');
  if (!leadCleanCell) Logger.log('‚ùå "–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ" not found in guest sheet');

  if (!guestsCountCell || !revenueCell || !percentageCell || !leadCell || !leadCleanCell) {
    Logger.log('‚ùå One or more source cells not found in guest sheet');
    return;
  }

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ
  var guestsCountPlanValue = guestSheet.getRange(guestsCountCell.getRow(), 2).getValue();
  var guestsCountFactValue = guestSheet.getRange(guestsCountCell.getRow(), 3).getValue();
  var revenuePlanValue = guestSheet.getRange(revenueCell.getRow(), 2).getValue();
  var revenueFactValue = guestSheet.getRange(revenueCell.getRow(), 3).getValue();
  var percentagePlanValue = guestSheet.getRange(percentageCell.getRow(), 2).getValue();
  var percentageFactValue = guestSheet.getRange(percentageCell.getRow(), 3).getValue();
  var leadPlanValue = guestSheet.getRange(leadCell.getRow(), 2).getValue();
  var leadFactValue = guestSheet.getRange(leadCell.getRow(), 3).getValue();
  var leadCleanPlanValue = guestSheet.getRange(leadCleanCell.getRow(), 2).getValue();
  var leadCleanFactValue = guestSheet.getRange(leadCleanCell.getRow(), 3).getValue();

  Logger.log('üìä Retrieved Data:');
  Logger.log('üîπ Guests Count Plan: ' + guestsCountPlanValue);
  Logger.log('üîπ Guests Count Fact: ' + guestsCountFactValue);
  Logger.log('üîπ Revenue Plan: ' + revenuePlanValue);
  Logger.log('üîπ Revenue Fact: ' + revenueFactValue);
  Logger.log('üîπ Percentage Plan: ' + percentagePlanValue);
  Logger.log('üîπ Percentage Fact: ' + percentageFactValue);
  Logger.log('üîπ Lead Plan: ' + leadPlanValue);
  Logger.log('üîπ Lead Fact: ' + leadFactValue);
  Logger.log('üîπ Lead Clean Plan: ' + leadCleanPlanValue);
  Logger.log('üîπ Lead Clean Fact: ' + leadCleanFactValue);

  // –õ–∏—Å—Ç "–ú–µ—Å—è—Ü –ì–ì"
  var monthSheet = ss.getSheetByName(sheetName);
  if (!monthSheet) {
    Logger.log('‚ùå Month sheet "' + sheetName + '" not found!');
    return;
  }

  var regularGuestsTargetCell = findCellByValueInColumn(monthSheet, '–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –≥–æ—Å—Ç–∏', 'E');
  if (!regularGuestsTargetCell) {
    Logger.log('‚ùå "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –≥–æ—Å—Ç–∏" not found in month sheet');
    return;
  }

  var targetRow = regularGuestsTargetCell.getRow();
  Logger.log('‚úÖ Found "–ü–æ—Å—Ç–æ—è–Ω–Ω—ã–µ –≥–æ—Å—Ç–∏" in month sheet at row: ' + targetRow);

  // –ò—â–µ–º —Ü–µ–ª–µ–≤—ã–µ —è—á–µ–π–∫–∏
  var dealsTargetCell = findCellByValueInColumn(monthSheet, '–°–¥–µ–ª–∫–∏', 'E', targetRow);
  var revenueTargetCell = findCellByValueInColumn(monthSheet, '–í—ã—Ä—É—á–∫–∞', 'E', targetRow);
  var percentageTargetCell = findCellByValueInColumn(monthSheet, '–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –≥–æ—Å—Ç–µ–π', 'E', targetRow);
  var leadTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã', 'E', targetRow);
  var leadCleanTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'E', targetRow);

  Logger.log('üîç Checking target cells:');
  if (!dealsTargetCell) Logger.log('‚ùå "–°–¥–µ–ª–∫–∏" not found in month sheet');
  if (!revenueTargetCell) Logger.log('‚ùå "–í—ã—Ä—É—á–∫–∞" not found in month sheet');
  if (!percentageTargetCell) Logger.log('‚ùå "–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –≥–æ—Å—Ç–µ–π" not found in month sheet');
  if (!leadTargetCell) Logger.log('‚ùå "–õ–∏–¥—ã" not found in month sheet');
  if (!leadCleanTargetCell) Logger.log('‚ùå "–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ" not found in month sheet');

  if (!dealsTargetCell || !revenueTargetCell || !percentageTargetCell || !leadTargetCell || !leadCleanTargetCell) {
    Logger.log('‚ùå One or more target cells not found in month sheet');
    return;
  }

  // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∏—Ç–æ–≥–æ–≤—ã–π –ª–∏—Å—Ç
  monthSheet.getRange(dealsTargetCell.getRow(), 6).setValue(guestsCountPlanValue);
  monthSheet.getRange(dealsTargetCell.getRow(), 7).setValue(guestsCountFactValue);
  monthSheet.getRange(revenueTargetCell.getRow(), 6).setValue(revenuePlanValue);
  monthSheet.getRange(revenueTargetCell.getRow(), 7).setValue(revenueFactValue);
  monthSheet.getRange(percentageTargetCell.getRow(), 6).setValue(percentagePlanValue);
  monthSheet.getRange(percentageTargetCell.getRow(), 7).setValue(percentageFactValue);
  monthSheet.getRange(leadTargetCell.getRow(), 6).setValue(leadPlanValue);
  monthSheet.getRange(leadTargetCell.getRow(), 7).setValue(leadFactValue);
  monthSheet.getRange(leadCleanTargetCell.getRow(), 6).setValue(leadCleanPlanValue);
  monthSheet.getRange(leadCleanTargetCell.getRow(), 7).setValue(leadCleanFactValue);

  Logger.log('‚úÖ Data successfully inserted into month sheet');
}


function updateGoogleMapsData() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var calculationSheet = ss.getSheetByName('–†–∞—Å—á–µ—Ç—ã');

  Logger.log('--- –ù–ê–ß–ê–õ–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø –î–ê–ù–ù–´–• GOOGLE MAPS ---');

  if (!calculationSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "–†–∞—Å—á–µ—Ç—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞
  var selectedMonth = getValue(calculationSheet, CellselectedMonth);
  var selectedYear = getValue(calculationSheet, CellSelectedYear);
  var monthUpperCase = convertMonthToUpperCase(selectedMonth, CellselectedMonth);
  var sheetName = monthUpperCase + ' ' + selectedYear.toString().slice(-2);

  Logger.log('–í—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü: ' + selectedMonth);
  Logger.log('–í—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ–¥: ' + selectedYear);
  Logger.log('–§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞: ' + sheetName);

  var guestSheet = ss.getSheetByName('–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏');
  if (!guestSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É "–ì—É–≥–ª –∫–∞—Ä—Ç—ã <–ú–µ—Å—è—Ü>"
  var searchPattern = '–ì—É–≥–ª –∫–∞—Ä—Ç—ã ' + selectedMonth;
  var googleMapsCell = findCellByValue(guestSheet, searchPattern);
  if (!googleMapsCell) {
    Logger.log('–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "' + searchPattern + '" –≤ "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏".');
    return;
  }
  var row = googleMapsCell.getRow();
  Logger.log('–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞: "' + searchPattern + '" –Ω–∞ —Å—Ç—Ä–æ–∫–µ ' + row);

  // –ù–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
  var leadsCell = findCellByValueInColumn(guestSheet, '–õ–∏–¥—ã', 'A', row);
  var dealCell = findCellByValueInColumn(guestSheet, '–°–¥–µ–ª–∫–∞', 'A', row);
  var revenueCell = findCellByValueInColumn(guestSheet, '–í—ã—Ä—É—á–∫–∞', 'A', row);
  var leadCleanCell = findCellByValueInColumn(guestSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'A', row);

  Logger.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫:');
  Logger.log('–õ–∏–¥—ã: ' + (leadsCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ: ' + (leadCleanCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–°–¥–µ–ª–∫–∞: ' + (dealCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–í—ã—Ä—É—á–∫–∞: ' + (revenueCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));

  var leadsPlanValue = leadsCell ? guestSheet.getRange(leadsCell.getRow(), 2).getValue() || 0 : 0;
  var totalPlanLeadsValue = leadsPlanValue;
  var leadsFactValue = leadsCell ? guestSheet.getRange(leadsCell.getRow(), 3).getValue() || 0 : 0;
  var totalFactLeadsValue = leadsFactValue;

  var leadCleanPlan = leadCleanCell ? guestSheet.getRange(leadCleanCell.getRow(), 2).getValue() || 0 : 0;
  var leadCleanFact = leadCleanCell ? guestSheet.getRange(leadCleanCell.getRow(), 3).getValue() || 0 : 0;

  var dealsPlanValue = dealCell ? guestSheet.getRange(dealCell.getRow(), 2).getValue() || 0 : 0;
  var dealsFactValue = dealCell ? guestSheet.getRange(dealCell.getRow(), 3).getValue() || 0 : 0;

  var revenuePlanValue = revenueCell ? guestSheet.getRange(revenueCell.getRow(), 2).getValue() || 0 : 0;
  var revenueFactValue = revenueCell ? guestSheet.getRange(revenueCell.getRow(), 3).getValue() || 0 : 0;

  // –õ–∏—Å—Ç "–Ø–ù–í–ê–†–¨ 25"
  var monthSheet = ss.getSheetByName(sheetName);
  if (!monthSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "' + sheetName + '" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }
  Logger.log('–õ–∏—Å—Ç –º–µ—Å—è—Ü–∞ "' + sheetName + '" –Ω–∞–π–¥–µ–Ω.');

  // –ù–∞–π—Ç–∏ "Google –ö–∞—Ä—Ç—ã" –≤ —Å—Ç–æ–ª–±—Ü–µ E
  var googleMapsTargetCell = findCellByValueInColumn(monthSheet, 'Google –ö–∞—Ä—Ç—ã', 'E');
  if (!googleMapsTargetCell) {
    Logger.log('–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "Google –ö–∞—Ä—Ç—ã" –≤ "' + sheetName + '".');
    return;
  }
  var targetRow = googleMapsTargetCell.getRow();
  Logger.log('–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "Google –ö–∞—Ä—Ç—ã" –Ω–∞ —Å—Ç—Ä–æ–∫–µ ' + targetRow);

  // –ó–∞–ø–∏—Å—å "–õ–∏–¥—ã"
  var leadsTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã', 'E', targetRow);
  if (leadsTargetCell) {
    monthSheet.getRange(leadsTargetCell.getRow(), 6).setValue(totalPlanLeadsValue);
    monthSheet.getRange(leadsTargetCell.getRow(), 7).setValue(totalFactLeadsValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–õ–∏–¥—ã": –ü–ª–∞–Ω = ' + totalPlanLeadsValue + ', –§–∞–∫—Ç = ' + totalFactLeadsValue);
  }

  // –ó–∞–ø–∏—Å—å "–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ"
  var cleanLeadsTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'E', targetRow);
  if (cleanLeadsTargetCell) {
    monthSheet.getRange(cleanLeadsTargetCell.getRow(), 6).setValue(leadCleanPlan);
    monthSheet.getRange(cleanLeadsTargetCell.getRow(), 7).setValue(leadCleanFact);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ": –ü–ª–∞–Ω = ' + leadCleanPlan + ', –§–∞–∫—Ç = ' + leadCleanFact);
  }

  // –ó–∞–ø–∏—Å—å "–°–¥–µ–ª–∫–∏"
  var dealsTargetCell = findCellByValueInColumn(monthSheet, '–°–¥–µ–ª–∫–∏', 'E', targetRow);
  if (dealsTargetCell) {
    monthSheet.getRange(dealsTargetCell.getRow(), 6).setValue(dealsPlanValue);
    monthSheet.getRange(dealsTargetCell.getRow(), 7).setValue(dealsFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–°–¥–µ–ª–∫–∏": –ü–ª–∞–Ω = ' + dealsPlanValue + ', –§–∞–∫—Ç = ' + dealsFactValue);
  }

  // –ó–∞–ø–∏—Å—å "–í—ã—Ä—É—á–∫–∞"
  var revenueTargetCell = findCellByValueInColumn(monthSheet, '–í—ã—Ä—É—á–∫–∞', 'E', targetRow);
  if (revenueTargetCell) {
    monthSheet.getRange(revenueTargetCell.getRow(), 6).setValue(revenuePlanValue);
    monthSheet.getRange(revenueTargetCell.getRow(), 7).setValue(revenueFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–í—ã—Ä—É—á–∫–∞": –ü–ª–∞–Ω = ' + revenuePlanValue + ', –§–∞–∫—Ç = ' + revenueFactValue);
  }

  Logger.log('--- –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ---');
}


function update2GISData() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();
  var calculationSheet = ss.getSheetByName('–†–∞—Å—á–µ—Ç—ã');

  Logger.log('--- –ù–ê–ß–ê–õ–û –û–ë–ù–û–í–õ–ï–ù–ò–Ø –î–ê–ù–ù–´–• 2GIS ---');

  if (!calculationSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "–†–∞—Å—á–µ—Ç—ã" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ –∏ –≥–æ–¥–∞
  var selectedMonth = getValue(calculationSheet, CellselectedMonth);
  var selectedYear = getValue(calculationSheet, CellSelectedYear);
  var monthUpperCase = convertMonthToUpperCase(selectedMonth, CellselectedMonth);
  var sheetName = monthUpperCase + ' ' + selectedYear.toString().slice(-2);

  Logger.log('–í—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü: ' + selectedMonth);
  Logger.log('–í—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ–¥: ' + selectedYear);
  Logger.log('–§–æ—Ä–º–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ª–∏—Å—Ç–∞: ' + sheetName);

  var guestSheet = ss.getSheetByName('–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏');
  if (!guestSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }

  // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É "2 –≥–∏—Å <–ú–µ—Å—è—Ü>"
  var searchPattern = '2 –≥–∏—Å ' + selectedMonth;
  var gisCell = findCellByValue(guestSheet, searchPattern);
  if (!gisCell) {
    Logger.log('–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "' + searchPattern + '" –≤ "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏".');
    return;
  }
  var row = gisCell.getRow();
  Logger.log('–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞: "' + searchPattern + '" –Ω–∞ —Å—Ç—Ä–æ–∫–µ ' + row);

  // –ù–∞–π—Ç–∏ –Ω—É–∂–Ω—ã–µ —Å—Ç—Ä–æ–∫–∏
  var leadsCell = findCellByValueInColumn(guestSheet, '–õ–∏–¥—ã', 'A', row);
  var leadCleanCell = findCellByValueInColumn(guestSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'A', row);
  var dealCell = findCellByValueInColumn(guestSheet, '–°–¥–µ–ª–∫–∞', 'A', row);
  var revenueCell = findCellByValueInColumn(guestSheet, '–í—ã—Ä—É—á–∫–∞', 'A', row);

  Logger.log('–†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫:');
  Logger.log('–õ–∏–¥—ã: ' + (leadsCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ: ' + (leadCleanCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–°–¥–µ–ª–∫–∞: ' + (dealCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));
  Logger.log('–í—ã—Ä—É—á–∫–∞: ' + (revenueCell ? '–ù–ê–ô–î–ï–ù–´' : '–ù–ï –ù–ê–ô–î–ï–ù–´'));

  var leadsPlanValue = leadsCell ? guestSheet.getRange(leadsCell.getRow(), 2).getValue() || 0 : 0;
  var totalPlanLeadsValue = leadsPlanValue;
  var leadsFactValue = leadsCell ? guestSheet.getRange(leadsCell.getRow(), 3).getValue() || 0 : 0;
  var totalFactLeadsValue = leadsFactValue;

  var leadCleanPlan = leadCleanCell ? guestSheet.getRange(leadCleanCell.getRow(), 2).getValue() || 0 : 0;
  var leadCleanFact = leadCleanCell ? guestSheet.getRange(leadCleanCell.getRow(), 3).getValue() || 0 : 0;

  var dealsPlanValue = dealCell ? guestSheet.getRange(dealCell.getRow(), 2).getValue() || 0 : 0;
  var dealsFactValue = dealCell ? guestSheet.getRange(dealCell.getRow(), 3).getValue() || 0 : 0;

  var revenuePlanValue = revenueCell ? guestSheet.getRange(revenueCell.getRow(), 2).getValue() || 0 : 0;
  var revenueFactValue = revenueCell ? guestSheet.getRange(revenueCell.getRow(), 3).getValue() || 0 : 0;

  // –õ–∏—Å—Ç "–Ø–ù–í–ê–†–¨ 25"
  var monthSheet = ss.getSheetByName(sheetName);
  if (!monthSheet) {
    Logger.log('–û—à–∏–±–∫–∞: –õ–∏—Å—Ç "' + sheetName + '" –Ω–µ –Ω–∞–π–¥–µ–Ω.');
    return;
  }
  Logger.log('–õ–∏—Å—Ç –º–µ—Å—è—Ü–∞ "' + sheetName + '" –Ω–∞–π–¥–µ–Ω.');

  // –ù–∞–π—Ç–∏ "2 –≥–∏—Å" –≤ —Å—Ç–æ–ª–±—Ü–µ E
  var gisTargetCell = findCellByValueInColumn(monthSheet, '2 –≥–∏—Å', 'E');
  if (!gisTargetCell) {
    Logger.log('–û—à–∏–±–∫–∞: –ù–µ –Ω–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "2 –≥–∏—Å" –≤ "' + sheetName + '".');
    return;
  }
  var targetRow = gisTargetCell.getRow();
  Logger.log('–ù–∞–π–¥–µ–Ω–∞ —Å—Ç—Ä–æ–∫–∞ "2 –≥–∏—Å" –Ω–∞ —Å—Ç—Ä–æ–∫–µ ' + targetRow);

  // –ó–∞–ø–∏—Å—å "–õ–∏–¥—ã"
  var leadsTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã', 'E', targetRow);
  if (leadsTargetCell) {
    monthSheet.getRange(leadsTargetCell.getRow(), 6).setValue(totalPlanLeadsValue);
    monthSheet.getRange(leadsTargetCell.getRow(), 7).setValue(totalFactLeadsValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–õ–∏–¥—ã": –ü–ª–∞–Ω = ' + totalPlanLeadsValue + ', –§–∞–∫—Ç = ' + totalFactLeadsValue);
  }

  // –ó–∞–ø–∏—Å—å "–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ"
  var cleanLeadsTargetCell = findCellByValueInColumn(monthSheet, '–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ', 'E', targetRow);
  if (cleanLeadsTargetCell) {
    monthSheet.getRange(cleanLeadsTargetCell.getRow(), 6).setValue(leadCleanPlan);
    monthSheet.getRange(cleanLeadsTargetCell.getRow(), 7).setValue(leadCleanFact);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–õ–∏–¥—ã –ß–∏—Å—Ç—ã–µ": –ü–ª–∞–Ω = ' + leadCleanPlan + ', –§–∞–∫—Ç = ' + leadCleanFact);
  }

  // –ó–∞–ø–∏—Å—å "–°–¥–µ–ª–∫–∏"
  var dealsTargetCell = findCellByValueInColumn(monthSheet, '–°–¥–µ–ª–∫–∏', 'E', targetRow);
  if (dealsTargetCell) {
    monthSheet.getRange(dealsTargetCell.getRow(), 6).setValue(dealsPlanValue);
    monthSheet.getRange(dealsTargetCell.getRow(), 7).setValue(dealsFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–°–¥–µ–ª–∫–∏": –ü–ª–∞–Ω = ' + dealsPlanValue + ', –§–∞–∫—Ç = ' + dealsFactValue);
  }

  // –ó–∞–ø–∏—Å—å "–í—ã—Ä—É—á–∫–∞"
  var revenueTargetCell = findCellByValueInColumn(monthSheet, '–í—ã—Ä—É—á–∫–∞', 'E', targetRow);
  if (revenueTargetCell) {
    monthSheet.getRange(revenueTargetCell.getRow(), 6).setValue(revenuePlanValue);
    monthSheet.getRange(revenueTargetCell.getRow(), 7).setValue(revenueFactValue);
    Logger.log('–ó–∞–ø–∏—Å–∞–Ω—ã "–í—ã—Ä—É—á–∫–∞": –ü–ª–∞–Ω = ' + revenuePlanValue + ', –§–∞–∫—Ç = ' + revenueFactValue);
  }

  Logger.log('--- –û–ë–ù–û–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û ---');
}



function findCurrentMonthAllLeads() {
  var ss = SpreadsheetApp.getActiveSpreadsheet();

  // –ü–æ–ª—É—á–∞–µ–º –ª–∏—Å—Ç—ã
  var calculationsSheet = ss.getSheetByName("–†–∞—Å—á–µ—Ç—ã");
  var guestsSheet = ss.getSheetByName("–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏");

  if (!calculationsSheet || !guestsSheet) {
    Logger.log("–û—à–∏–±–∫–∞: –û–¥–∏–Ω –∏–∑ –ª–∏—Å—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω.");
    return;
  }

  // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü –∏ –≥–æ–¥ –∏–∑ H2 –∏ F2 –Ω–∞ –ª–∏—Å—Ç–µ "–†–∞—Å—á–µ—Ç—ã"
  var selectedMonth = calculationsSheet.getRange("H2").getValue().trim();
  var selectedYear = calculationsSheet.getRange("F2").getValue().toString().trim();

  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –º–µ—Å—è—Ü —Å –ø–µ—Ä–≤–æ–π –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤–æ–π
  selectedMonth = capitalizeFirstLetter(selectedMonth);

  // –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏ –ø–æ–∏—Å–∫–∞ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
  var searchTextAllLeads = selectedMonth + " –≤—Å–µ –ª–∏–¥—ã";
  var searchTextCleanLeads = selectedMonth + " —á–∏—Å—Ç—ã–µ –ª–∏–¥—ã";

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–æ–ª–±—Ü–æ–≤ A –∏ B –ª–∏—Å—Ç–∞ "–ö–∞—Ä—Ç—ã, –ø–æ—Å—Ç–æ—è–Ω.–≥–æ—Å—Ç–∏"
  var columnA = guestsSheet.getRange("A:A").getValues().flat();
  var columnB = guestsSheet.getRange("B:B").getValues().flat();

  // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω—É–∂–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –≤ —Å—Ç–æ–ª–±—Ü–µ A –¥–ª—è "–≤—Å–µ –ª–∏–¥—ã"
  var foundAllLeads = false;
  for (var i = 0; i < columnA.length; i++) {
    if (columnA[i].toString().trim() === searchTextAllLeads) {
      var resultAllLeads = columnB[i];
      Logger.log("–ù–∞–π–¥–µ–Ω–æ: " + searchTextAllLeads + " –≤ —Å—Ç—Ä–æ–∫–µ " + (i + 1) + ". –ó–Ω–∞—á–µ–Ω–∏–µ –≤ B: " + resultAllLeads);

      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ B110 –Ω–∞ –ª–∏—Å—Ç–µ "–†–∞—Å—á–µ—Ç—ã" —á–µ—Ä–µ–∑ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
      setValue(calculationsSheet, "mapsGuestAllLeadCurr", resultAllLeads || 0); // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 0, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ
      foundAllLeads = true;
      break;
    }
  }
  if (!foundAllLeads) {
    Logger.log("–¢–µ–∫—Å—Ç '" + searchTextAllLeads + "' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç–æ–ª–±—Ü–µ A.");
    setValue(calculationsSheet, "mapsGuestAllLeadCurr", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
  }

  // –ò—â–µ–º —Å—Ç—Ä–æ–∫—É —Å –Ω—É–∂–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º –≤ —Å—Ç–æ–ª–±—Ü–µ A –¥–ª—è "—á–∏—Å—Ç—ã–µ –ª–∏–¥—ã"
  var foundCleanLeads = false;
  for (var j = 0; j < columnA.length; j++) {
    if (columnA[j].toString().trim() === searchTextCleanLeads) {
      var resultCleanLeads = columnB[j];
      Logger.log("–ù–∞–π–¥–µ–Ω–æ: " + searchTextCleanLeads + " –≤ —Å—Ç—Ä–æ–∫–µ " + (j + 1) + ". –ó–Ω–∞—á–µ–Ω–∏–µ –≤ B: " + resultCleanLeads);

      // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –Ω–∞–π–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ B114 –Ω–∞ –ª–∏—Å—Ç–µ "–†–∞—Å—á–µ—Ç—ã" —á–µ—Ä–µ–∑ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é
      setValue(calculationsSheet, "mapsGuestCleanLeadCurr", resultCleanLeads || 0); // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º 0, –µ—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –ø—É—Å—Ç–æ–µ
      foundCleanLeads = true;
      break;
    }
  }
  if (!foundCleanLeads) {
    Logger.log("–¢–µ–∫—Å—Ç '" + searchTextCleanLeads + "' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å—Ç–æ–ª–±—Ü–µ A.");
    setValue(calculationsSheet, "mapsGuestCleanLeadCurr", "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö");
  }
}