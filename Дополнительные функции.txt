//–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Ñ—É–Ω–∫—Ü–∏–∏
function findCellByValue(sheet, value) {
  var data = sheet.getDataRange().getValues();
  for (var i = 0; i < data.length; i++) {
    for (var j = 0; j < data[i].length; j++) {
      if (data[i][j] === value) {
        return sheet.getRange(i + 1, j + 1);
      }
    }
  }
  return null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏, —á—Ç–æ–±—ã —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è –±—É–∫–≤–∞ –∫–∞–∂–¥–æ–≥–æ —Å–ª–æ–≤–∞ –±—ã–ª–∞ –∑–∞–≥–ª–∞–≤–Ω–æ–π
function capitalizeFirstLetter(text) {
  return text.split(' ').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');
}

function findCellsByValue(sheet, value) {
  var data = sheet.getDataRange().getValues();
  var cells = [];
  for (var i = 0; i < data.length; i++) {
    for (var j = 0; j < data[i].length; j++) {
      if (data[i][j] === value) {
        cells.push(sheet.getRange(i + 1, j + 1));
      }
    }
  }
  return cells;
}




// function findCellByValue(sheet, value) {
//   var data = sheet.getDataRange().getValues();
//   for (var i = 0; i < data.length; i++) {
//     for (var j = 0; j < data[i].length; j++) {
//       if (data[i][j] === value) {
//         return sheet.getRange(i + 1, j + 1);
//       }
//     }
//   }
//   return null;
// }

function findCellByValueInColumn(sheet, value, column, startRow = 1) {
  var columnValues = sheet.getRange(column + startRow + ':' + column).getValues();
  for (var i = 0; i < columnValues.length; i++) {
    if (columnValues[i][0] === value) {
      return sheet.getRange(startRow + i, column.charCodeAt(0) - 64);
    }
  }
  return null;
}


// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–∞ –≤ –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã
//function convertMonthToUpperCase(month) {
//  Logger.log('convertMonthToUpperCase: Received month = ' + month);
//  return month.toUpperCase();
//}

function convertMonthToUpperCase(month, cellAddress) {
  Logger.log('convertMonthToUpperCase: Received month = ' + month + ' from cell ' + cellAddress);
  
  if (!month) {
    throw new Error('–ú–µ—Å—è—Ü –Ω–µ —É–∫–∞–∑–∞–Ω –∏–ª–∏ –Ω–µ–≤–µ—Ä–µ–Ω –≤ —è—á–µ–π–∫–µ ' + cellAddress);
  }

  return month.toUpperCase();
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —è—á–µ–µ–∫
function getValue(sheet, cell) {
  return sheet.getRange(cell).getValue();
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–Ω–∞—á–µ–Ω–∏—è —è—á–µ–µ–∫
function setValue(sheet, cell, value) {
  sheet.getRange(cell).setValue(value);
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–π
function setRangeValues(sheet, startCell, values) {
  var startRange = sheet.getRange(startCell);
  var numRows = values.length;
  var numCols = values[0].length;
  var targetRange = sheet.getRange(startRange.getRow(), startRange.getColumn(), numRows, numCols);
  targetRange.setValues(values);
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —á–∏—Å–ª–æ–≤–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è –º–µ—Å—è—Ü–∞
function getMonthNumber(monthName) {
  Logger.log('getMonthNumber: Received monthName = ' + monthName);

  if (!monthName) {
    throw new Error('–ú–µ—Å—è—Ü –Ω–µ —É–∫–∞–∑–∞–Ω –∏–ª–∏ –Ω–µ–≤–µ—Ä–µ–Ω');
  }

  var monthNames = ['–Ø–ù–í–ê–†–¨', '–§–ï–í–†–ê–õ–¨', '–ú–ê–†–¢', '–ê–ü–†–ï–õ–¨', '–ú–ê–ô', '–ò–Æ–ù–¨', '–ò–Æ–õ–¨', '–ê–í–ì–£–°–¢', '–°–ï–ù–¢–Ø–ë–†–¨', '–û–ö–¢–Ø–ë–†–¨', '–ù–û–Ø–ë–†–¨', '–î–ï–ö–ê–ë–†–¨'];
  var monthIndex = monthNames.indexOf(monthName.toUpperCase());
  if (monthIndex === -1) {
    throw new Error('–ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞: ' + monthName);
  }
  Logger.log('getMonthNumber: Found monthIndex = ' + monthIndex);
  return (monthIndex + 1).toString().padStart(2, '0'); // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –º–µ—Å—è—Ü–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ "02"
}

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –º–µ—Å—è—Ü–∞
function getPreviousMonth(month, year) {
  var monthNames = ['–Ø–ù–í–ê–†–¨', '–§–ï–í–†–ê–õ–¨', '–ú–ê–†–¢', '–ê–ü–†–ï–õ–¨', '–ú–ê–ô', '–ò–Æ–ù–¨', '–ò–Æ–õ–¨', '–ê–í–ì–£–°–¢', '–°–ï–ù–¢–Ø–ë–†–¨', '–û–ö–¢–Ø–ë–†–¨', '–ù–û–Ø–ë–†–¨', '–î–ï–ö–ê–ë–†–¨'];
  var monthIndex = monthNames.indexOf(month.toUpperCase());
  if (monthIndex == -1) throw new Error('–ù–µ–≤–µ—Ä–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞: ' + month);

  var prevMonthIndex = (monthIndex - 1 + 12) % 12;
  var prevYear = monthIndex === 0 ? year - 1 : year;

  return {
    month: monthNames[prevMonthIndex],
    year: prevYear
  };
}



// –î–ø–æ–ª–æ–Ω–∏—Ç–µ–ª—å–Ω–∞—è –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –Ω–µ–¥–µ–ª—å –¥–ª—è —Ñ—É–Ω–∫—Ü–∏–∏ compareWeeklyAverages
function getWeeklyValues(sheet) {
  Logger.log('üîç –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –Ω–µ–¥–µ–ª—å –Ω–∞ –ª–∏—Å—Ç–µ: ' + sheet.getName());
  
  var weeklyValues = [];
  for (var i = 1; i <= 4; i++) {
    var weekCell = findCellByValueInColumn(sheet, i + ' –Ω–µ–¥–µ–ª—è', 'D');
    if (weekCell) {
      var weekValue = sheet.getRange(weekCell.getRow(), weekCell.getColumn() + 1).getValue(); // –ó–Ω–∞—á–µ–Ω–∏–µ –≤ —Å—Ç–æ–ª–±—Ü–µ E
      Logger.log('‚úÖ ' + i + ' –Ω–µ–¥–µ–ª—è: –Ω–∞–π–¥–µ–Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ ' + weekValue);
      weeklyValues.push(weekValue);
    } else {
      Logger.log('‚ùå ' + i + ' –Ω–µ–¥–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∞ –ª–∏—Å—Ç–µ ' + sheet.getName());
      weeklyValues.push(null);
    }
  }
  return weeklyValues;
}